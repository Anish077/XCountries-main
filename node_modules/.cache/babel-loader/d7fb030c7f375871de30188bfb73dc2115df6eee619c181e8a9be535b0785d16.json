{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\This PC\\\\Downloads\\\\XCountries\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await fetch('https://xcountries-backend.labs.crio.do/all');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCountries(data);\n      } catch (error) {\n        console.error('Error fetching data.', error);\n        setError('Failed to load countries data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCountries();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Country Flags Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading countries...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Country Flags Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country Flags Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countries-grid\",\n      children: countries.map(country => {\n        var _country$flags;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: ((_country$flags = country.flags) === null || _country$flags === void 0 ? void 0 : _country$flags.png) || country.flag,\n            alt: `Flag of ${country.name}`,\n            className: \"country-flag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country-name\",\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, country.alpha3Code || country.code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oFNb773lH7HZQ6s9e2UvmNgt08w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","countries","setCountries","loading","setLoading","error","setError","fetchCountries","response","fetch","ok","Error","status","data","json","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","country","_country$flags","src","flags","png","flag","alt","name","alpha3Code","code","_c","$RefreshReg$"],"sources":["C:/Users/This PC/Downloads/XCountries/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const response = await fetch('https://xcountries-backend.labs.crio.do/all');\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        setCountries(data);\r\n      } catch (error) {\r\n        console.error('Error fetching data.', error);\r\n        setError('Failed to load countries data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"app\">\r\n        <h1>Country Flags Display</h1>\r\n        <div className=\"loading\">Loading countries...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"app\">\r\n        <h1>Country Flags Display</h1>\r\n        <div className=\"error\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Country Flags Display</h1>\r\n      <div className=\"countries-grid\">\r\n        {countries.map((country) => (\r\n          <div key={country.alpha3Code || country.code} className=\"country-card\">\r\n            <img \r\n              src={country.flags?.png || country.flag} \r\n              alt={`Flag of ${country.name}`}\r\n              className=\"country-flag\"\r\n            />\r\n            <div className=\"country-name\">{country.name}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}